{"version":3,"sources":["Components/Todos.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","markComplete","ListGroup","className","map","todo","ListGroupItem","todoString","onClick","id","TodoForm","addTodos","useState","setTodoString","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","type","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","App","setTodos","useEffect","localTodos","localStorage","getItem","console","log","JSON","parse","a","setItem","stringify","Container","fluid","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAmBeA,EAfD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACtB,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,eAACC,EAAA,EAAD,WACGD,EAAKE,WACN,sBAAMJ,UAAW,OAAOK,QAAS,kBAAMP,EAAaI,EAAKI,KAAzD,SACE,cAAC,IAAD,QAHgBJ,EAAKI,U,wDC0ClBC,EAvCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,EAAoCC,mBAAS,IAA7C,mBAAOL,EAAP,KAAmBM,EAAnB,KAiBA,OACE,cAACC,EAAA,EAAD,CAAMC,SAhBa,SAAAC,GAEnB,GADAA,EAAEC,iBACiB,KAAfV,EACF,OAAOW,MAAM,0BAEf,IAAMb,EAAO,CACXE,aACAE,GAAIU,eAGNR,EAASN,GAETQ,EAAc,KAId,SACE,cAACO,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,OACLf,GAAG,OACHgB,YAAY,sBACZC,MAAOnB,EACPoB,SAAU,SAAAX,GAAC,OAAIH,EAAcG,EAAEY,OAAOF,UAExC,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAd,gCCAGC,EAjCH,WACV,MAA0BrB,mBAAS,IAAnC,mBAAOZ,EAAP,KAAckC,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQ,SACxCC,QAAQC,IAAI,CAACH,4BACTD,GACFF,EAASO,KAAKC,MAAMN,MAErB,IAEH,IAAMzB,EAAQ,uCAAG,WAAMN,GAAN,SAAAsC,EAAA,sDACfT,EAAS,GAAD,mBAAKlC,GAAL,CAAYK,KADL,2CAAH,sDAId8B,qBAAU,WACRE,aAAaO,QAAQ,QAASH,KAAKI,UAAU7C,MAC7C,CAACA,IAOH,OACE,eAAC8C,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,oDACA,cAAC,EAAD,CAAO/C,MAASA,EAAOC,aARN,SAAAQ,GACnByB,EAASlC,EAAMgD,QAAO,SAAA3C,GAAI,OAAGA,EAAKI,KAAOA,SAQvC,cAAC,EAAD,CAAUE,SAAYA,QCzBbsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.178c7d43.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { FaCheckDouble } from \"react-icons/fa\";\r\n\r\nconst Todos = ({ todos, markComplete }) => {\r\n  return (\r\n    <ListGroup className=\"mt-5 mb-2 items\">\r\n      {todos.map(todo => (\r\n        <ListGroupItem key={todo.id}>\r\n          {todo.todoString}\r\n          <span className =\"icon\" onClick={() => markComplete(todo.id)}>\r\n            <FaCheckDouble />\r\n          </span>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  Form\r\n} from \"reactstrap\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst TodoForm = ({ addTodos }) => {\r\n  const [todoString, setTodoString] = useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (todoString === \"\") {\r\n      return alert(\"Please fill some value\");\r\n    }\r\n    const todo = {\r\n      todoString,\r\n      id: v4()\r\n    };\r\n\r\n    addTodos(todo);\r\n\r\n    setTodoString(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <InputGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            id=\"todo\"\r\n            placeholder=\"Enter a todo string\"\r\n            value={todoString}\r\n            onChange={e => setTodoString(e.target.value)}\r\n          />\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <Button color=\"success\">Add Todo</Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, {useState, useEffect} from \"react\";\nimport {Container} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nimport Todos from \"./Components/Todos\";\nimport TodoForm from \"./Components/TodoForm\";\n\n\nconst App = () =>{\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const localTodos = localStorage.getItem(\"todos\")\n    console.log({localStorage});\n    if (localTodos){\n      setTodos(JSON.parse(localTodos))\n    }\n  }, []);\n\n  const addTodos = async todo =>{\n    setTodos([...todos, todo])\n  };\n\n  useEffect(() =>{\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  },[todos]);\n\n  const markComplete = id =>{\n    setTodos(todos.filter(todo =>todo.id !== id))\n  };\n\n\n  return(\n    <Container fluid>\n      <h1>Todo local storage</h1>\n      <Todos todos = {todos} markComplete = {markComplete}/>\n      <TodoForm addTodos = {addTodos} />\n    </Container>\n\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}